{"remainingRequest":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/src/App.vue","mtime":1607350186324},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}