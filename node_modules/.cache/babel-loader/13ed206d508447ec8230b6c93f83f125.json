{"remainingRequest":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/babel-loader/lib/index.js!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/src/App.vue","mtime":1607350186324},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sslye/Workspace/DAAAAR/tourist-Unesco/daar3_cv/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyB1cGxvYWQgfSBmcm9tICcuL3NlcnZpY2UuanMnOyAvL3JlYWwgc2VydmljZQoKaW1wb3J0IHsgcXVlcnlmIH0gZnJvbSAnLi9zZXJ2aWNlLmpzJzsgLy9yZWFsIHNlcnZpY2UKLy9pbXBvcnQgeyBxdWVyeWYgfSBmcm9tICcuL2Zha2Vfc2VydmljZTIuanMnOyAvLyBmYWtlIHNlcnZpY2UKLy9pbXBvcnQgeyB1cGxvYWQgfSBmcm9tICcuL2Zha2Vfc2VydmljZS5qcyc7IC8vIGZha2Ugc2VydmljZQovL2ltcG9ydCAqIGFzIGF4aW9zIGZyb20gJ2F4aW9zJzsKCnZhciBTVEFUVVNfSU5JVElBTCA9IDAsCiAgICBTVEFUVVNfU0FWSU5HID0gMSwKICAgIFNUQVRVU19TVUNDRVNTID0gMiwKICAgIFNUQVRVU19GQUlMRUQgPSAzLAogICAgU1RBVFVTX1JFQ0hFUkNIRSA9IDQ7CmV4cG9ydCBkZWZhdWx0IHsKICAvL3N1Ym1pdCBmaWxlcwogIG5hbWU6ICdhcHAnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiAnJywKICAgICAgcmVzdWx0OiBudWxsLAogICAgICBwcmVub206IG51bGwsCiAgICAgIG5vbTogbnVsbCwKICAgICAgcXVlcnk6IG51bGwsCiAgICAgIHVwbG9hZGVkRmlsZXM6IFtdLAogICAgICB1cGxvYWRFcnJvcjogbnVsbCwKICAgICAgY3VycmVudFN0YXR1czogbnVsbCwKICAgICAgdXBsb2FkRmllbGROYW1lOiAncGhvdG9zJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0luaXRpYWw6IGZ1bmN0aW9uIGlzSW5pdGlhbCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFN0YXR1cyA9PT0gU1RBVFVTX0lOSVRJQUw7CiAgICB9LAogICAgaXNTYXZpbmc6IGZ1bmN0aW9uIGlzU2F2aW5nKCkgewogICAgICByZXR1cm4gdGhpcy5jdXJyZW50U3RhdHVzID09PSBTVEFUVVNfU0FWSU5HOwogICAgfSwKICAgIGlzU3VjY2VzczogZnVuY3Rpb24gaXNTdWNjZXNzKCkgewogICAgICByZXR1cm4gdGhpcy5jdXJyZW50U3RhdHVzID09PSBTVEFUVVNfU1VDQ0VTUzsKICAgIH0sCiAgICBpc0ZhaWxlZDogZnVuY3Rpb24gaXNGYWlsZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRTdGF0dXMgPT09IFNUQVRVU19GQUlMRUQ7CiAgICB9LAogICAgaXNSZWNoZXJjaGU6IGZ1bmN0aW9uIGlzUmVjaGVyY2hlKCkgewogICAgICByZXR1cm4gdGhpcy5jdXJyZW50U3RhdHVzID09PSBTVEFUVVNfUkVDSEVSQ0hFOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLypzdWJtaXRGaWxlKCl7CiAgICAgIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCB0aGlzLmZpbGUpOwogICAgICBheGlvcy5wb3N0KCAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3VwbG9hZCcsCiAgICAgIGZvcm1EYXRhLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgKS50aGVuKGZ1bmN0aW9uKCl7CiAgICAgIGNvbnNvbGUubG9nKCdTVUNDRVNTISEnKTsKICAgICAgfSkKICAgICAgLmNhdGNoKGZ1bmN0aW9uKCl7CiAgICAgICAgY29uc29sZS5sb2coJ0ZBSUxVUkUhIScpOwogICAgICB9KTsKICAgIH0sCiAgICAqLwoKICAgIC8qCiAgICAgIEhhbmRsZXMgYSBjaGFuZ2Ugb24gdGhlIGZpbGUgdXBsb2FkCiAgICAqLwoKICAgIC8qCiAgICBoYW5kbGVGaWxlVXBsb2FkKCl7CiAgICAgIHRoaXMuZmlsZSA9IHRoaXMuJHJlZnMuZmlsZS5maWxlc1swXTsKICAgIH0sCiAgICAqLwogICAgcmVxdWV0ZTogZnVuY3Rpb24gcmVxdWV0ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMucXVlcnkgPSB0aGlzLiRyZWZzLnF1ZXJ5LnZhbHVlOwogICAgICB2YXIgYXJnID0gdGhpcy5xdWVyeTsKICAgICAgcXVlcnlmKGFyZykudGhlbihmdW5jdGlvbiAoeCkgewogICAgICAgIC8vdGhpcy5yZXN1bHQgPSB4OyAvL0xpc3RlIGljaQogICAgICAgIC8vY29uc29sZS5sb2coImRlYnVnIikKICAgICAgICAvL2NvbnNvbGUubG9nKCJ4ID0gIiArIHgpOyAvLyB4ID0gW29iamVjdCBPYmplY3RdLFtvYmplY3QgT2JqZWN0XQogICAgICAgIF90aGlzLnJlc3VsdCA9IHguZGF0YTsgLy9jb25zb2xlLmxvZygicmVzdWx0ID0gIiArIHRoaXMucmVzdWx0KTsgLy8gcmVzdWx0ID0gdW5kZWZpbmVkCiAgICAgICAgLy9hbGVydCh0aGlzLnJlc3VsdCk7CiAgICAgICAgLy9hbGVydCh0aGlzLnJlc3VsdC5wcmVub20pOwoKICAgICAgICBfdGhpcy5jdXJyZW50U3RhdHVzID0gU1RBVFVTX1JFQ0hFUkNIRTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGlmIChlcnIucmVzcG9uc2UpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJFUlJFVVIgR0VUIDoiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCI+PiAiICsgZXJyLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgY29uc29sZS5sb2coIj4+ICIgKyBlcnIucmVzcG9uc2Uuc3RhdHVzKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCI+PiAiICsgZXJyLnJlc3BvbnNlLmhlYWRlcnMpOwogICAgICAgICAgX3RoaXMudXBsb2FkRXJyb3IgPSBlcnIucmVzcG9uc2U7CiAgICAgICAgICBfdGhpcy5jdXJyZW50U3RhdHVzID0gU1RBVFVTX0ZBSUxFRDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJlc1RvU3RyaW5nOiBmdW5jdGlvbiByZXNUb1N0cmluZyhsKSB7CiAgICAgIHZhciByZXMgPSAiIjsKICAgICAgbC5mb3JFYWNoKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgcmVzICs9IHAucHJlbm9tICsgIiAiICsgcC5ub20gKyAiIFRlbCA6ICIgKyBwLnRlbCArICIgTWFpbCA6ICIgKyBwLm1haWwgKyAiIEdpdCA6ICIgKyBwLmdpdDsKICAgICAgfSk7CiAgICAgIHJldHVybiByZXM7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICAvLyByZXNldCBmb3JtIHRvIGluaXRpYWwgc3RhdGUKICAgICAgdGhpcy5jdXJyZW50U3RhdHVzID0gU1RBVFVTX0lOSVRJQUw7CiAgICAgIHRoaXMucmVzdWx0ID0gbnVsbDsKICAgICAgdGhpcy5wcmVub20gPSBudWxsOwogICAgICB0aGlzLm5vbSA9IG51bGw7CiAgICAgIHRoaXMudXBsb2FkZWRGaWxlcyA9IFtdOwogICAgICB0aGlzLnVwbG9hZEVycm9yID0gbnVsbDsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKGZvcm1EYXRhKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8gdXBsb2FkIGRhdGEgdG8gdGhlIHNlcnZlcgogICAgICB0aGlzLmN1cnJlbnRTdGF0dXMgPSBTVEFUVVNfU0FWSU5HOwogICAgICB1cGxvYWQoZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24gKHgpIHsKICAgICAgICBfdGhpczIudXBsb2FkZWRGaWxlcyA9IFtdLmNvbmNhdCh4KTsKICAgICAgICBfdGhpczIuY3VycmVudFN0YXR1cyA9IFNUQVRVU19TVUNDRVNTOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXMyLnVwbG9hZEVycm9yID0gZXJyLnJlc3BvbnNlOwogICAgICAgIF90aGlzMi5jdXJyZW50U3RhdHVzID0gU1RBVFVTX0ZBSUxFRDsKICAgICAgfSk7CiAgICB9LAogICAgZmlsZXNDaGFuZ2U6IGZ1bmN0aW9uIGZpbGVzQ2hhbmdlKGZpZWxkTmFtZSwgZmlsZUxpc3QpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvLyBoYW5kbGUgZmlsZSBjaGFuZ2VzCiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBpZiAoIWZpbGVMaXN0Lmxlbmd0aCkgcmV0dXJuOyAvLyBhcHBlbmQgdGhlIGZpbGVzIHRvIEZvcm1EYXRhCgogICAgICBBcnJheS5mcm9tKEFycmF5KGZpbGVMaXN0Lmxlbmd0aCkua2V5cygpKS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICBfdGhpczMubm9tID0gX3RoaXMzLiRyZWZzLm5vbS52YWx1ZS50b1VwcGVyQ2FzZSgpOwogICAgICAgIF90aGlzMy5wcmVub20gPSBfdGhpczMuJHJlZnMucHJlbm9tLnZhbHVlLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXlx3LywgZnVuY3Rpb24gKGMpIHsKICAgICAgICAgIHJldHVybiBjLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgfSk7IC8vYWxlcnQgKHRoaXMubm9tKTsKICAgICAgICAvL2FsZXJ0KGZpbGVMaXN0W3hdLm5hbWUpOyAvL0ljaSBjaGFuZ2VyIHZhbGV1cgoKICAgICAgICB2YXIgcGFydHMgPSBmaWxlTGlzdFt4XS5uYW1lLnNwbGl0KCcuJyk7CiAgICAgICAgdmFyIGV4dGVuc2lvbiA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdOyAvL2FsZXJ0KHBhcnRzKTsKCiAgICAgICAgZm9ybURhdGEuYXBwZW5kKGZpZWxkTmFtZSwgZmlsZUxpc3RbeF0sIF90aGlzMy5ub20gKyAiXyIgKyBfdGhpczMucHJlbm9tICsgIi4iICsgZXh0ZW5zaW9uKTsKICAgICAgfSk7IC8vIHNhdmUgaXQKCiAgICAgIHRoaXMuc2F2ZShmb3JtRGF0YSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXNldCgpOwogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <!--UPLOAD-->\n      <form enctype=\"multipart/form-data\" novalidate v-if=\"isInitial || isSaving\">\n        <h1>Soumission d'un CV</h1>\n        <div class=\"dropbox\">\n          <p>\n            NOM \n          </p>\n          <p> \n            <input type=\"text\" name=\"nom\" ref=\"nom\" />\n          </p>\n          <p>\n            Prénom  \n          </p>\n          <p> \n            <input type=\"text\" name=\"prenom\" ref=\"prenom\" />\n          </p>\n          <input type=\"file\" multiple  :name=\"uploadFieldName\" :disabled=\"isSaving\" @change=\"filesChange($event.target.name, $event.target.files); fileCount = $event.target.files.length\"\n            accept=\".pdf, .doc, .docx, image/*\" class=\"input-file\">\n            <p v-if=\"isInitial\">\n              Déposez votre CV <br> ou cliquez pour selectionner\n            </p>\n            <p v-if=\"isSaving\">\n              Uploading {{ fileCount }} files...\n            </p>\n        </div>\n      </form>\n\n      <!-- UPLOAD2 -->\n      <!--\n      <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n          <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n          </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n      </div>\n      -->\n      \n      <!-- multiple -->\n      <!--SUCCESS-->\n      <div v-if=\"isSuccess\">\n        <h2>Uploaded {{ uploadedFiles.length }} file(s) successfully.</h2>\n        <p>\n          <a href=\"javascript:void(0)\" @click=\"reset()\">Upload again</a>\n        </p>\n        <ul class=\"list-unstyled\">\n          <li v-for = \"item in uploadedFiles\" :key = item.url>  <!-- Attention: Peut ne pas marcher  -->\n            <img :src=\"item.url\" class=\"img-responsive img-thumbnail\" :alt=\"item.originalName\">\n          </li>\n        </ul>\n        <!-- Ici a été supprimé du code  -->\n        \n      </div>\n      <!--FAILED-->\n      <div v-if=\"isFailed\">\n        <h2>Uploaded failed.</h2>\n        <p>\n          <a href=\"javascript:void(0)\" @click=\"reset()\">Nouvel essai</a>\n        </p>\n        <pre>{{ uploadError }}</pre>\n      </div>\n\n      <!--Recherche OK -->\n      <div v-if=\"isRecherche\">\n        <h2>Recherche effectuée.</h2>\n        <p>\n          <a href=\"javascript:void(0)\" @click=\"reset()\">Nouvelle Recherche</a>\n        </p>\n         <div>\n             <div v-for=\"(p, id) in result\" :key=\"`p-${id}`\" style=\"background: cyan; margin: 5px;\">\n               <h5>{{ p.prenom }} {{ p.nom }}</h5>\n               <p>Tel: {{ p.tel }}</p>\n               <p>Mail: <a v-bind:href=\"'mailto:' + p.mail\">{{ p.mail }}</a></p>\n               <p>Git: <a v-bind:href=\"'https://' + p.git\">{{ p.git }}</a></p>\n             </div>\n           </div>\n      </div>\n\n      <form v-on:submit.prevent=\"requete\" >\n        <h1>Recherche des CV ayant les compétences suivante:</h1>\n        <input type=\"text\" name=\"qwery\" ref=\"query\" v-on:change=\"requete()\" />\n        <input type=\"submit\" value=\"Recherche\" />\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { upload } from './service.js'; //real service\n  import { queryf } from './service.js'; //real service\n  //import { queryf } from './fake_service2.js'; // fake service\n  //import { upload } from './fake_service.js'; // fake service\n  //import * as axios from 'axios';\n\n  const STATUS_INITIAL = 0, STATUS_SAVING = 1, STATUS_SUCCESS = 2, STATUS_FAILED = 3, STATUS_RECHERCHE = 4;\n\n  export default {\n\n    //submit files\n\n    name: 'app',\n    data() {\n      return {\n        file:'',\n        result:null,\n        prenom:null,\n        nom: null,\n        query: null,\n        uploadedFiles: [],\n        uploadError: null,\n        currentStatus: null,\n        uploadFieldName: 'photos'\n      }\n    },\n    computed: {\n      isInitial() {\n        return this.currentStatus === STATUS_INITIAL;\n      },\n      isSaving() {\n        return this.currentStatus === STATUS_SAVING;\n      },\n      isSuccess() {\n        return this.currentStatus === STATUS_SUCCESS;\n      },\n      isFailed() {\n        return this.currentStatus === STATUS_FAILED;\n      },\n      isRecherche() {\n        return this.currentStatus === STATUS_RECHERCHE;\n      }\n    },\n    methods: {  \n\n      /*submitFile(){\n        let formData = new FormData();\n        formData.append('file', this.file);\n        axios.post( 'http://localhost:8080/upload',\n        formData,\n                {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n              }\n        ).then(function(){\n        console.log('SUCCESS!!');\n        })\n        .catch(function(){\n          console.log('FAILURE!!');\n        });\n      },\n      */\n      /*\n        Handles a change on the file upload\n      */\n      /*\n      handleFileUpload(){\n        this.file = this.$refs.file.files[0];\n      },\n      */\n\n      requete() {\n        this.query = this.$refs.query.value;\n        const arg = this.query;\n        queryf(arg)\n        .then(x => {\n          //this.result = x; //Liste ici\n          //console.log(\"debug\")\n          //console.log(\"x = \" + x); // x = [object Object],[object Object]\n\n          this.result = x.data;\n          //console.log(\"result = \" + this.result); // result = undefined\n          //alert(this.result);\n          //alert(this.result.prenom);\n\n          this.currentStatus = STATUS_RECHERCHE;\n        })\n        .catch((err) => {\n    if (err.response) {\n      console.log(\"ERREUR GET :\");\n      console.log(\">> \" + err.response.data);\n      console.log(\">> \" + err.response.status);\n      console.log(\">> \" + err.response.headers);\n      this.uploadError = err.response;\n      this.currentStatus = STATUS_FAILED;\n    }\n  })\n      },\n\n      resToString(l) {\n                  let res = \"\";\n                  l.forEach((p) => {\n                    res += p.prenom + \" \"+ p.nom + \" Tel : \" + p.tel + \" Mail : \" + p.mail + \" Git : \" + p.git;\n                  });\n                  return res;\n                },\n\n      reset() {\n        // reset form to initial state\n        this.currentStatus = STATUS_INITIAL;\n        this.result = null;\n        this.prenom = null;\n        this.nom = null;\n        this.uploadedFiles = [];\n        this.uploadError = null;\n      },\n      save(formData) {\n        // upload data to the server\n        this.currentStatus = STATUS_SAVING;\n\n        upload(formData)\n          .then(x => {\n            this.uploadedFiles = [].concat(x);\n            this.currentStatus = STATUS_SUCCESS;\n          })\n          .catch(err => {\n            this.uploadError = err.response;\n            this.currentStatus = STATUS_FAILED;\n          });\n      },\n      filesChange(fieldName, fileList) {\n        // handle file changes\n        const formData = new FormData();\n        \n\n        if (!fileList.length) return;\n\n        // append the files to FormData\n        Array\n          .from(Array(fileList.length).keys())\n          .map(x => {\n            this.nom = this.$refs.nom.value.toUpperCase();\n            this.prenom = this.$refs.prenom.value.toLowerCase().replace(/^\\w/, (c) => c.toUpperCase());\n            //alert (this.nom);\n            //alert(fileList[x].name); //Ici changer valeur\n            let parts = fileList[x].name.split('.');\n            let extension = parts[parts.length -1 ];\n            //alert(parts);\n            formData.append(fieldName, fileList[x], (this.nom + \"_\" + this.prenom + \".\" + extension));\n          });\n\n        // save it\n        this.save(formData);\n      }\n    },\n    mounted() {\n      this.reset();\n    },\n  }\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"sourceRoot":"src"}]}